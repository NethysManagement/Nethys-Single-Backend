package com.steelezide.nethys.dtos;

import java.util.ArrayList;
import java.util.List;

import com.steelezide.nethys.pojos.PlayerClass;
import com.steelezide.nethys.pojos.Spell;

import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@NoArgsConstructor
@AllArgsConstructor
public class ClassDto implements Dto<PlayerClass>{

    /**
     * ID auto-generated by the database used to reference a specific class.
     */
    private int id;

    /**
     * Denotes the name of this particular Pathfinder class.
     */
    private String name;

    /**
     * A cast type can be divine, arcane, or none. In the case of none,
     * this class does not cast spells.
     */
    private String castType;

    /**
     * If true, this class must prepare their spells to utilize them. 
     */
    private boolean prepared;

    /**
     * If true, this class must learn their spells to utilize them. 
     */
    private boolean learned;

    /**
     * Contains a list of spells this class can learn and/or prepare.
     */
    private List<SpellDto> spellList;

	public ClassDto(PlayerClass pc) {
        this();
        this.id = pc.getId();
        this.name = pc.getName();
        this.castType = pc.getCastType();
        this.prepared = pc.isPrepared();
        this.learned = pc.isLearned();
        
        List<SpellDto> spellConverter = new ArrayList<>();
        for(Spell spell: pc.getSpellList()){
            spellConverter.add(new SpellDto(spell));
        }
        this.spellList = spellConverter;
	}

	public PlayerClass toPojo() {
        
        List<Spell> spellConverter = new ArrayList<>();
        for(SpellDto spell: this.getSpellList()){
            spellConverter.add(spell.toPojo());
        }

        PlayerClass pc = new PlayerClass(
            this.getId(),
            this.getName(),
            this.getCastType(),
            this.isPrepared(),
            this.isLearned(),
            spellConverter
        );

		return pc;
	}
    
}
