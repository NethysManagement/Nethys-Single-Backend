package com.steelezide.nethys.dtos;

import com.steelezide.nethys.pojos.AbilityScores;
import com.steelezide.nethys.pojos.PlayerCharacter;

import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@NoArgsConstructor
@AllArgsConstructor
public class CharacterDto implements Dto<PlayerCharacter> {

    /**
     * ID auto-generated by the database used to reference a specific character.
     */
    private int id;

    /**
     * Username of the player who created the character. 
     */
    private String username;

    /**
     * The character's name which is restricted to alphanumberic characters.
     */
    private String name;

    /**
     * Reperesents a character's total level from all classes.
     */
    private int level;

    /**
     * Two letter combinations representing the character's alignment.
     * Example: Lawful Good = LG
     */
    private String alignment;

    /**
     * Represents the character's size modifier. <p>
     * Example: <ul>
     * <li>Large = -1 </li> 
     * <li>Medium = +0 </li>
     * <li>Small = +1 </li>
     * </ul>
     * </p>
     */
    private int size;

    /**
     * Represents the deity that the character worships.
     * Effects some feats, archetypes, classes, and prestige classes.
     */
    private String deity;

    /**
     * Represents the character's in-game age.
     * Modifies ability scores
     */
    private int age;

    /**
     * Effects the roll for turn order.
     * Calculated from the character's dexterity modifier, feats, spells, and other effects. 
     */
    private int initiative;

    /**
     * Represents a character's in-game class.
     */
    private ClassDto playerClass;

    /**
     * A container object for this character's ability scores.
     */
    private AbilityScores abilityScores = new AbilityScores();
    
    public CharacterDto (PlayerCharacter pc) {
        this();
        this.id = pc.getId();
        this.username = pc.getUsername();
        this.name = pc.getName();
        this.level = pc.getLevel();
        this.alignment = pc.getAlignment();
        this.size = pc.getSize();
        this.deity = pc.getDeity();
        this.age = pc.getAge();
        this.initiative = pc.getInitiative();
        this.playerClass = new ClassDto(pc.getPlayerClass()); 
        this.abilityScores = pc.getAbilityScores();
    }

    @Override
    public PlayerCharacter toPojo() {

        PlayerCharacter pc = new PlayerCharacter(
            this.getId(),
            this.getUsername(),
            this.getName(),
            this.getLevel(),
            this.getAlignment(),
            this.getSize(),
            this.getDeity(),
            this.getAge(),
            this.getInitiative(),
            this.getPlayerClass().toPojo(),
            this.getAbilityScores()
        );

        return pc;
    }
}
